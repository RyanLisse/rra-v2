{
  "name": "ai-chatbot",
  "version": "3.0.23",
  "private": true,
  "scripts": {
    "dev": "bun --bun next dev --turbo",
    "dev:webpack": "bun --bun next dev",
    "build": "if [ \"$SKIP_MIGRATIONS\" != \"true\" ]; then tsx lib/db/migrate; fi && next build",
    "build:vercel": "next build",
    "build:turbo": "tsx lib/db/migrate && next build --turbo",
    "start": "next start",
    "lint": "next lint && biome lint --write --unsafe",
    "lint:fix": "next lint --fix && biome lint --write --unsafe",
    "format": "biome format --write",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "npx tsx lib/db/migrate.ts",
    "db:studio": "drizzle-kit studio",
    "db:push": "drizzle-kit push",
    "db:pull": "drizzle-kit pull",
    "db:check": "drizzle-kit check",
    "db:up": "drizzle-kit up",
    "db:fix-conflicts": "./scripts/fix-migration-conflicts.sh",
    "db:reset-migrations": "./scripts/fix-migration-conflicts.sh --clear",
    "test": "npx vitest",
    "test:unit": "npx vitest run",
    "test:watch": "npx vitest --watch",
    "test:coverage": "npx vitest --coverage",
    "test:api": "npx vitest run tests/api",
    "test:components": "npx vitest run tests/components",
    "test:components:npm": "npm exec -- vitest run tests/components",
    "test:single": "npm exec -- vitest run",
    "test:integration": "vitest run tests/integration",
    "test:performance": "vitest run tests/performance",
    "process:pdfs": "tsx scripts/process-all-pdfs.ts",
    "process:pdfs:simple": "tsx scripts/simple-pdf-processor.ts",
    "process:pdfs:offline": "tsx scripts/offline-pdf-processor.ts",
    "convert:pdfs:images": "tsx scripts/pdf-images-converter.ts",
    "organize:pdfs": "tsx scripts/organize-pdf-output.ts",
    "convert:images:final": "tsx scripts/pdf-images-final.ts",
    "extract:pdfs:standalone": "tsx standalone-pdf-extractor.ts",
    "analyze:performance": "tsx scripts/analyze-performance.ts",
    "audit:performance": "tsx scripts/performance-audit.ts",
    "analyze:dependencies": "tsx -e \"import { dependencyAnalyzer } from './lib/architecture/dependency-analyzer'; dependencyAnalyzer.analyzeDependencies('.').then(console.log)\"",
    "optimize:database": "tsx -e \"import { performanceEnhancer } from './lib/optimization/performance-enhancer'; performanceEnhancer.optimizeDatabase().then(console.log)\"",
    "batch:process": "tsx scripts/batch-pdf-processor.ts",
    "test:lib": "vitest run tests/lib",
    "test:utils": "vitest run tests/utils",
    "test:fixtures": "vitest run tests/fixtures",
    "test:e2e": "export PLAYWRIGHT=True && bun run playwright test",
    "test:e2e:ui": "export PLAYWRIGHT=True && bun run playwright test --ui",
    "test:e2e:debug": "export PLAYWRIGHT=True && bun run playwright test --debug",
    "test:e2e:headed": "export PLAYWRIGHT=True && bun run playwright test --headed",
    "test:e2e:chromium": "export PLAYWRIGHT=True && bun run playwright test --project=e2e",
    "test:e2e:routes": "export PLAYWRIGHT=True && bun run playwright test --project=routes",
    "playwright:install": "bun run playwright install",
    "test:all": "bun test:unit && bun test:e2e",
    "test:ci": "bun test:coverage && bun test:e2e",
    "test:db:up": "docker-compose -f docker-compose.test.yml up -d",
    "test:db:down": "docker-compose -f docker-compose.test.yml down",
    "test:db:stop": "docker-compose -f docker-compose.test.yml stop",
    "test:db:clean": "docker-compose -f docker-compose.test.yml down -v",
    "validate:setup": "tsx scripts/validate-setup.ts",
    "test:db:logs": "docker-compose -f docker-compose.test.yml logs -f test-postgres",
    "test:db:wait": "until docker-compose -f docker-compose.test.yml exec -T test-postgres pg_isready -U test -d test_db; do sleep 1; done",
    "test:setup": "bun test:db:up && bun test:db:wait",
    "test:teardown": "bun test:db:down",
    "test:rag-eval": "bun run scripts/run-rag-evaluation.ts",
    "test:rag-eval:mock": "bun run scripts/run-mock-rag-evaluation.ts",
    "test:with-db": "bun test:setup && bun test && bun test:teardown",
    "test:neon": "USE_NEON_BRANCHING=true bun test",
    "test:neon:unit": "USE_NEON_BRANCHING=true bun run vitest run",
    "test:neon:integration": "USE_NEON_BRANCHING=true bun run vitest --config vitest.config.minimal.ts",
    "test:neon:e2e": "USE_NEON_BRANCHING=true bun run test:e2e",
    "test:neon:cleanup": "bun run tsx scripts/cleanup-test-branches.ts",
    "test:branch:create": "bun run tsx scripts/create-test-branch.ts",
    "test:branch:list": "bun run tsx scripts/list-test-branches.ts",
    "test:branch:delete": "bun run tsx scripts/delete-test-branch.ts",
    "test:branches:manager": "bun run tsx scripts/neon-test-branch-manager.ts",
    "test:branches:create": "bun run tsx scripts/create-test-branches.ts",
    "test:branches:cleanup": "bun run tsx scripts/cleanup-old-branches.ts",
    "test:branches:status": "bun run tsx scripts/test-branch-status.ts",
    "test:branches:health": "bun run tsx scripts/test-branch-status.ts health",
    "test:branches:demo": "bun run tsx scripts/demo-workflow.ts",
    "test:slice-17": "bun run tsx tests/scripts/run-slice-17-tests.ts",
    "test:slice-17:integration": "USE_NEON_BRANCHING=true bun test tests/integration/slice-17-rag-enhancement.test.ts",
    "test:slice-17:e2e": "USE_NEON_BRANCHING=true bunx playwright test tests/e2e/slice-17-end-to-end.test.ts",
    "test:slice-17:quick": "USE_NEON_BRANCHING=true bun test tests/integration/slice-17-rag-enhancement.test.ts -t 'ADE Metadata Integration|Enhanced Search'",
    "test:slice-17:performance": "USE_NEON_BRANCHING=true bun test tests/integration/slice-17-rag-enhancement.test.ts -t 'Performance'",
    "test:slice-17:compatibility": "USE_NEON_BRANCHING=true bun test tests/integration/slice-17-rag-enhancement.test.ts -t 'legacy|mixed|backward'",
    "inngest:dev": "npx inngest-cli@latest dev",
    "inngest:install": "npm install -g inngest-cli",
    "inngest:verify": "bun test tests/lib/inngest-setup.test.ts",
    "inngest:sync": "curl -X GET http://localhost:3000/api/inngest",
    "inngest:status": "curl -X GET http://localhost:8288/health",
    "dev:inngest": "concurrently \"bun run inngest:dev\" \"bun run dev\"",
    "dev:full": "concurrently \"bun run inngest:dev\" \"bun run dev\" --names \"inngest,next\" --prefix-colors \"blue,green\"",
    "cache:test": "bun test tests/lib/redis-cache-integration.test.ts",
    "cache:stats": "bun run scripts/cache-stats.ts",
    "cache:clear": "bun run scripts/cache-clear.ts",
    "cache:health": "bun run scripts/cache-health.ts",
    "cache:monitor": "bun run scripts/cache-monitor.ts",
    "cache:warm": "bun run scripts/cache-warm.ts"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.12",
    "@ai-sdk/google": "^1.2.19",
    "@ai-sdk/openai": "^1.3.22",
    "@ai-sdk/react": "^1.2.11",
    "@ai-sdk/xai": "^1.2.16",
    "@codemirror/lang-javascript": "^6.2.2",
    "@codemirror/lang-python": "^6.1.6",
    "@codemirror/state": "^6.5.0",
    "@codemirror/theme-one-dark": "^6.1.2",
    "@codemirror/view": "^6.35.3",
    "@google/generative-ai": "^0.24.1",
    "@kinde-oss/kinde-auth-nextjs": "^2.6.2",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/api-logs": "^0.57.2",
    "@radix-ui/react-alert-dialog": "^1.1.2",
    "@radix-ui/react-dialog": "^1.1.2",
    "@radix-ui/react-dropdown-menu": "^2.1.2",
    "@radix-ui/react-icons": "^1.3.0",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.1.2",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-tooltip": "^1.1.3",
    "@radix-ui/react-visually-hidden": "^1.1.0",
    "@vercel/analytics": "^1.3.1",
    "@vercel/blob": "^0.24.1",
    "@vercel/functions": "^2.0.0",
    "@vercel/otel": "^1.12.0",
    "@vercel/postgres": "^0.10.0",
    "ai": "4.3.13",
    "bcrypt-ts": "^5.0.2",
    "better-auth": "^1.2.8",
    "class-variance-authority": "^0.7.1",
    "classnames": "^2.5.1",
    "clsx": "^2.1.1",
    "codemirror": "^6.0.1",
    "cohere-ai": "^7.17.1",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "diff-match-patch": "^1.0.5",
    "dotenv": "^16.4.5",
    "drizzle-orm": "^0.34.1",
    "fast-deep-equal": "^3.1.3",
    "framer-motion": "^11.3.19",
    "geist": "^1.3.1",
    "inngest": "^3.39.0",
    "ioredis": "^5.4.1",
    "jotai": "^2.12.5",
    "lucide-react": "^0.513.0",
    "nanoid": "^5.0.8",
    "next": "^15.1.6",
    "next-themes": "^0.4.6",
    "orderedmap": "^2.1.1",
    "papaparse": "^5.5.2",
    "pdf-parse": "^1.1.1",
    "pdf-to-img": "^4.5.0",
    "pdf-to-png-converter": "^3.6.5",
    "pdf2pic": "^3.2.0",
    "pino": "^9.7.0",
    "pino-pretty": "^13.0.0",
    "postgres": "^3.4.4",
    "prosemirror-example-setup": "^1.2.3",
    "prosemirror-inputrules": "^1.4.0",
    "prosemirror-markdown": "^1.13.1",
    "prosemirror-model": "^1.23.0",
    "prosemirror-schema-basic": "^1.2.3",
    "prosemirror-schema-list": "^1.4.1",
    "prosemirror-state": "^1.4.3",
    "prosemirror-view": "^1.34.3",
    "react": "^19.0.0",
    "react-data-grid": "7.0.0-beta.47",
    "react-day-picker": "8.10.1",
    "react-dom": "^19.0.0",
    "react-dropzone": "^14.3.8",
    "react-markdown": "^9.0.1",
    "react-resizable-panels": "^2.1.7",
    "redis": "^5.0.0",
    "remark-gfm": "^4.0.0",
    "resumable-stream": "^2.0.0",
    "server-only": "^0.0.1",
    "sonner": "^2.0.5",
    "swr": "^2.2.5",
    "tailwind-merge": "^3.3.0",
    "usehooks-ts": "^3.1.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@biomejs/biome": "1.9.4",
    "@faker-js/faker": "^9.8.0",
    "@paralleldrive/cuid2": "^2.2.2",
    "@playwright/test": "^1.50.1",
    "@tailwindcss/postcss": "^4.1.8",
    "@tailwindcss/typography": "0.5.16",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/d3-scale": "^4.0.8",
    "@types/node": "^22.8.6",
    "@types/papaparse": "^5.3.15",
    "@types/pdf-parse": "^1.1.5",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@vitejs/plugin-react": "^4.5.1",
    "concurrently": "^9.1.2",
    "drizzle-kit": "^0.31.1",
    "eslint": "^8.57.0",
    "eslint-config-next": "14.2.5",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.3",
    "eslint-plugin-tailwindcss": "^3.17.5",
    "jsdom": "^26.1.0",
    "postcss": "^8",
    "tailwindcss": "^4.1.8",
    "tsx": "^4.19.1",
    "tw-animate-css": "^1.3.4",
    "typescript": "^5.6.3",
    "vitest": "^3.2.2"
  },
  "optionalDependencies": {
    "lightningcss-linux-x64-gnu": "^1.30.1"
  }
}
