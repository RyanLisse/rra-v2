# Example test environment configuration
# Copy this file to .env.test and fill in your values

# =============================================================================
# Neon Database Branching Configuration (Enhanced)
# =============================================================================

# Enable Neon branching for tests (set to 'true' to enable)
USE_NEON_BRANCHING=false

# Neon API credentials (required if USE_NEON_BRANCHING=true)
NEON_API_KEY=your_neon_api_key_here
NEON_PROJECT_ID=your_neon_project_id_here

# Optional Neon configuration
NEON_PARENT_BRANCH_ID=br_main_branch_id    # Defaults to main branch
NEON_DATABASE_NAME=neondb                   # Database name for test branches
NEON_ROLE_NAME=neondb_owner                 # Role name for connections
NEON_USE_POOLING=true                       # Enable connection pooling
NEON_DB_PASSWORD=your_database_password     # Database password

# Enhanced Neon API Client Configuration
NEON_API_BASE_URL=https://console.neon.tech/api/v2
NEON_API_RATE_LIMIT_PER_MINUTE=60          # API requests per minute
NEON_API_BURST_LIMIT=10                    # Burst limit for API requests
NEON_API_MAX_RETRIES=3                     # Maximum retry attempts
NEON_API_BASE_DELAY_MS=1000                # Base delay for exponential backoff
NEON_API_MAX_DELAY_MS=10000                # Maximum delay for retries

# Neon branching behavior
NEON_BRANCH_TIMEOUT=120000                  # Max time to wait for branch creation (ms)
NEON_MAX_CONCURRENT_BRANCHES=5              # Limit concurrent branches
NEON_CLEANUP_ON_STARTUP=true                # Cleanup old branches on startup
NEON_MAX_BRANCH_AGE_HOURS=24                # Auto-cleanup branches older than this
NEON_AUTO_CLEANUP_ENABLED=true              # Enable automatic cleanup
NEON_PRESERVE_TAGGED_BRANCHES=true          # Preserve branches with preserve tags

# Branch naming and tagging
NEON_BRANCH_NAME_PREFIX=test                # Prefix for test branch names
NEON_DEFAULT_BRANCH_TAGS=test,automated     # Default tags for test branches
NEON_PRESERVE_TAGS=preserve,keep            # Tags that prevent auto-cleanup

# Performance and monitoring
NEON_ENABLE_PERFORMANCE_METRICS=true        # Enable performance tracking
NEON_ENABLE_OPERATION_LOGGING=true          # Enable operation logging
NEON_LOG_LEVEL=info                         # Logging level (debug, info, warn, error)
NEON_METRICS_RETENTION_HOURS=168            # Keep metrics for 7 days
NEON_EXPORT_METRICS_ON_EXIT=true            # Export metrics on process exit

# =============================================================================
# Standard Test Database Configuration (fallback)
# =============================================================================

# Standard PostgreSQL connection (used when Neon branching is disabled)
POSTGRES_URL=postgresql://test:test@localhost:5432/test_db
POSTGRES_POOLED_URL=postgresql://test:test@localhost:5432/test_db

# =============================================================================
# Test Application Configuration
# =============================================================================

# Authentication
BETTER_AUTH_SECRET=test-secret-key-for-testing
BETTER_AUTH_URL=http://localhost:3000

# AI Provider API Keys (for integration tests)
OPENAI_API_KEY=your_openai_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# Inngest Configuration
# =============================================================================

# Inngest event streaming and workflow orchestration
# For local development (Inngest Dev Server)
INNGEST_EVENT_KEY=local                     # Event key for local development
INNGEST_DEV_SERVER_URL=http://localhost:8288 # Inngest Dev Server URL

# For production (Inngest Cloud) - uncomment and fill in for production testing
# INNGEST_EVENT_KEY=your-inngest-event-key
# INNGEST_SIGNING_KEY=your-inngest-signing-key
# INNGEST_BASE_URL=https://api.inngest.com

# Inngest workflow configuration
INNGEST_APP_ID=rra-v2-app                  # Application identifier
INNGEST_APP_NAME=RRA V2 Document Processing # Human-readable app name
INNGEST_SERVE_PATH=/api/inngest             # API route path for Inngest communication
INNGEST_STREAMING_ENABLED=true              # Enable streaming for long-running workflows
INNGEST_MAX_RETRIES=3                       # Maximum retry attempts for failed functions
INNGEST_LOGGER_LEVEL=debug                  # Logging level (debug, info, warn, error)

# Document processing workflow timeouts (in milliseconds)
INNGEST_DOCUMENT_UPLOAD_TIMEOUT=60000       # Document upload processing timeout
INNGEST_TEXT_EXTRACTION_TIMEOUT=300000     # Text extraction timeout (5 minutes)
INNGEST_CHUNKING_TIMEOUT=120000             # Document chunking timeout (2 minutes)
INNGEST_EMBEDDING_TIMEOUT=600000            # Embedding generation timeout (10 minutes)
INNGEST_BATCH_PROCESSING_TIMEOUT=1800000   # Batch processing timeout (30 minutes)

# Event processing configuration
INNGEST_EVENT_BUFFER_SIZE=100               # Number of events to buffer
INNGEST_PARALLEL_EXECUTION_LIMIT=5          # Maximum parallel workflow executions
INNGEST_DEAD_LETTER_QUEUE_ENABLED=true      # Enable dead letter queue for failed events

# Other test configuration
NODE_ENV=test
USE_TEST_SAVEPOINTS=false                   # Enable savepoints for test isolation
PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0          # Skip browser download for faster setup

# =============================================================================
# Test Behavior Configuration (Enhanced)
# =============================================================================

# Vitest configuration
VITEST_TIMEOUT=120000                       # Test timeout in milliseconds (increased for Neon ops)
VITEST_HOOK_TIMEOUT=120000                  # Hook timeout in milliseconds
VITEST_TEARDOWN_TIMEOUT=60000               # Teardown timeout for cleanup
VITEST_POOL_THREADS_MIN=1                   # Minimum test threads
VITEST_POOL_THREADS_MAX=4                   # Maximum test threads
VITEST_SEQUENCE_CONCURRENT=false            # Run tests sequentially for Neon stability
VITEST_ISOLATE=true                         # Force test isolation

# Playwright configuration
PLAYWRIGHT_TIMEOUT=180000                   # E2E test timeout in milliseconds (increased)
PLAYWRIGHT_EXPECT_TIMEOUT=120000            # Expect timeout for assertions
PLAYWRIGHT_WORKERS=2                        # Number of parallel workers (reduced for Neon)
PLAYWRIGHT_FULLY_PARALLEL=true              # Enable parallel execution
PLAYWRIGHT_RETRIES=0                        # Number of retries on failure
PLAYWRIGHT_USE_NEON_GLOBAL_SETUP=true       # Use Neon-aware global setup

# Test isolation and savepoints
USE_TEST_SAVEPOINTS=false                   # Enable savepoints for test isolation
TEST_ISOLATION_MODE=branch                  # branch|savepoint|none
TEST_BRANCH_REUSE=false                     # Reuse branches across tests in same suite

# Performance and monitoring
ENABLE_TEST_METRICS=true                    # Enable test performance metrics
ENABLE_BRANCH_METRICS=true                  # Track branch creation/deletion metrics
TEST_METRICS_OUTPUT_DIR=./test-results      # Directory for test metrics output
EXPORT_TEST_REPORTS=true                    # Export detailed test reports

# Debugging and logging
DEBUG=                                      # Debug patterns (e.g., "neon:*,test:*")
VERBOSE_LOGGING=false                       # Enable verbose test logging
TEST_LOG_LEVEL=info                         # Test logging level
ENABLE_CONSOLE_CAPTURE=true                 # Capture console output in tests
ENABLE_REQUEST_LOGGING=false                # Log HTTP requests during tests

# Cleanup and maintenance
AUTO_CLEANUP_TEST_DATA=true                 # Cleanup test data after tests
CLEANUP_PARALLEL_LIMIT=3                    # Max parallel cleanup operations
FORCE_CLEANUP_ON_EXIT=true                  # Force cleanup on process exit
PRESERVE_TEST_ARTIFACTS_ON_FAILURE=true     # Keep artifacts when tests fail